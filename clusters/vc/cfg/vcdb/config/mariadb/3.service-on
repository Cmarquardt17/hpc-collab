#!/bin/bash

## $Header: $
## Source:
## @file vcdb/install/slurm/4.mariadb-service-on-early

## @brief start mariadb service early, as required by slurm configurator

VCLOAD=../../../provision/loader/shload.sh

if [ ! -f "${VCLOAD}" ] ; then
  echo "${0}: missing: ${VCLOAD}"
  exit 99
fi
source ${VCLOAD}

# if we're given an argument, append test output to it
declare -x OUT=${1:-""}

if [ -n "${OUT}" ] ; then
  touch ${OUT} || exit 1
  exec > >(tee -a "${OUT}") 2>&1
fi

MY_CONF=/etc/my.cnf
tstamp=`date +%Y.%m.%d.%H:%M`

socket=$(grep socket ${MY_CONF} | sed 's/socket=//')
logfile=$(grep log-error ${MY_CONF} | sed 's/log-error=//')
pidfile=$(grep pid-file ${MY_CONF} | sed 's/pid-file=//')

if [ -s "${logfile}" ] ; then
  Rc ErrExit ${EX_OSFILE}	"mv ${logfile} ${logfile}.${tstamp}"
  Rc ErrExit ${EX_OSFILE}	"touch ${logfile}"
  Rc ErrExit ${EX_OSERR}	"chown mysql:mysql ${logfile}"
fi

iam=$(id -n -u)
if [ ${iam} != "root" ] ; then
  ErrExit ${EX_NOPERM} "insufficient authority"
fi

if [ -S "${socket}" -a -f "${pidfile}" ] ; then
  Verbose "  already running? pid:"$(cat ${pidfile})
  exit ${EX_OK}
  ### ErrExit ${EX_OSERR} "socket: ${socket} exists, another instance running?"
fi

Rc ErrExit ${EX_OSERR} "/usr/libexec/mariadb-prepare-db-dir"
Rc ErrExit ${EX_OSERR} "mysqld_safe &"

delay=1
retries=0
max_retries=5
tries=0
started=""
while [ ${tries} -lt ${max_retries} -a "${started}" != "true" ]
do
  if [ -S "${socket}" ] ; then
    started="true"
  else
    sleep ${delay}
  fi
  delay=`expr ${delay} + ${delay}`
  (( tries++ ))
done

if [ -z "${started}" ] ; then
  ErrExit ${EX_OSERR} "mariadb did not start, tries:${tries}"
fi

tries=0
ready=""
while [ ${tries} -lt ${max_retries} -a "${ready}" != "true" ]
do
  mysql -e 'show tables;' -s mysql >/dev/null 2>&1
  rc=$?
  if [ ${rc} -eq ${EX_OK} ] ; then
    ready="true"
  else
    sleep delay
    delay=`expr ${delay} + ${delay}`
  fi
  (( tries++ ))
done

trap '' 0
exit ${EX_OK}
