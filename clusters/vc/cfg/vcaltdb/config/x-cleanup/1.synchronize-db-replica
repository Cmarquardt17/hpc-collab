#!/bin/bash

## $Header: $
## Source:
## @file vcaltdb/config/x-cleanup/1.synchronize-db-replica

VCLOAD=../../../provision/loader/shload.sh

if [ ! -f "${VCLOAD}" ] ; then
  echo "${0}: missing: ${VCLOAD}"
  exit 99
fi
source ${VCLOAD}

# if we're given an argument, append test output to it
declare -x OUT=${1:-""}

if [ -n "${OUT}" ] ; then
  touch ${OUT} || exit 1
  exec > >(tee -a "${OUT}") 2>&1
fi

# 1. stop the replica mysql instance
Rc ErrExit ${EX_SOFTWARE} "systemctl stop mysqld"
Rc ErrExit ${EX_SOFTWARE} "systemctl status mysqld"
isinactive=$(systemctl status mysqld | grep 'Active: ' | awk '{print $2}')
if [ "${isinactive}" != "inactive" ] ; then
  ErrExit ${EX_SOFTWARE} "mysqld is still active: \"${isinactive}\""
fi


declare -x COMMON_ROOT=${COMMON}/root
declare -x MYSQL_PW_F=${COMMON_ROOT}/mysql_pw
declare -x MYSQL_PW
declare -x PRIMARY_DB_HOST=${HOSTNAME:0:2}db

if [ -z "${IAM}" ] ; then
  IAM=$(basename ${0})
fi
if [ -z "${PROD}" ] ; then
  PROD=$(pwd)
fi
TSTAMP=`date +%Y.%m.%d.%H:%M`
TMP=${PROD}.${IAM}.${TSTAMP}
declare -x PRIMARY_DB_DUMP=${TMPDIR:-/tmp}/${TMP}.db

if [ ! -f ${MYSQL_PW_F} ] ; then
  ErrExit ${EX_CONFIG} "MYSQL_PW_F:${MYSQL_PW_F} does not exist"
fi
if [ ! -s ${MYSQL_PW_F} ] ; then
  ErrExit ${EX_CONFIG} "MYSQL_PW_F:${MYSQL_PW_F} empty"
fi
MYSQL_PW=$(cat ${MYSQL_PW_F})
AUTH="--root --password=${MYSQL_PW}"

# 2. ssh to primary, issue 'FLUSH TABLES WITH READ LOCK' and hold connection open
exec 3> >(ssh ${PRIMARY_DB_HOST} mysql -rBs "${AUTH}")
echo "FLUSH_TABLES_WITH_READ_LOCK;" >&3

# 3. in separate ssh, while the read lock is still in effect (ie 1st command is still open), 'SHOW MASTER STATUS'
declare -x MASTER_POS
declare -x MASTER_BINLOG
MASTER_POS=$(ssh ${PRIMARY_DB_HOST} mysql -rBs "${AUTH}" -e "SHOW MASTER_STATUS;" | awk '{print $1}')
MASTER_BINLOG=$(ssh ${PRIMARY_DB_HOST} mysql -rBs "${AUTH}" -e "SHOW MASTER_STATUS;" | awk '{print $2}')

# 4. take note of: POSITION in binlog
#     if the log file name is empty, use binlog of '' and POSITION=4 (this should rarely or not be the case)
if ! [[ ${master_pos} =~ ${numeric} ]] ; then
  Warn ${EX_CONFIG} "binlog position set to 4; no binlog file reported from PRIMARY_DB_HOST:${PRIMARY_DB_HOST}"
  master_pos=4
  master_binlog=''
fi

# 5. ssh to primary and issue 'mysqldump' generating data dump (keep lock in place)
Rc ErrExit ${EX_OSERR} "ssh ${PRIMARY_DB_HOST} mysqldump > ${PRIMARY_DB_DUMP}"
Rc ErrExit ${EX_OSERR} "cp -buv ${PRIMARY_DB_DUMP} ${COMMON_ROOT}"

# 6. on the primary, release the read lock
echo "exit;" >&3

# 7.  start the replica mysql invocation with '--skip-slave-start'
Rc ErrExit ${EX_OSERR} "mysqld --skip-slave-start"

# 8. restore the data to the replica:
#    mysql < db dump from (5)
if [ ! -f ${COMMON_ROOT}/${PRIMARY_DB_DUMP} ] ; then
  ErrExit ${EX_OSERR} "COMMON_ROOT/PRIMARY_DB_DUMP:${COMMON_ROOT}/${PRIMARY_DB_DUMP} does not exist"
fi
if [ ! -s ${COMMON_ROOT}/${PRIMARY_DB_DUMP} ] ; then
  ErrExit ${EX_OSERR} "COMMON_ROOT/PRIMARY_DB_DUMP:${COMMON_ROOT}/${PRIMARY_DB_DUMP} is empty"
fi
Rc ErrExit ${EX_OSERR} "mysql ${AUTH} < ${COMMON_ROOT}/${PRIMARY_DB_DUMP}"
# 9.  issue the 'CHANGE MASTER' invocation
mysql --line-numbers ${AUTH} << _CHANGE_MASTER_CMD_
CHANGE MASTER TO
MASTER_HOST = '${PRIMARY_DB_HOST}',
MASTER_PORT = 3306,
MASTER_USER = 'root',
MASTER_PASSWORD = '${MYSQL_PW}',
MASTER_LOG_FILE = '${MASTER_BINLOG}',
MASTER_LOG_POSITION = '${MASTER_POS}';
_CHANGE_MASTER_CMD_
# 10.  stop & restart the replica mysqld without '--skip-slave-start'
for s in HUP TERM KILL
do
  Rc ErrExit ${EX_OSERR} "pkill --signal ${s} mysqld"
  sleep 0.3
done

# 11.  issue the 'start slave'
Rc ErrExit ${EX_OSERR} "systemctl start mysqld"
Rc ErrExit ${EX_OSERR} "systemctl status mysqld"
Rc ErrExit ${EX_OSERR} "mysql ${AUTH} -e 'START SLAVE;'"

# 12. check some status
Rc ErrExit ${EX_OSERR} "mysql ${AUTH} -e 'SHOW SLAVE STATUS;'"

# 13. check some table values
Rc ErrExit ${EX_SOFTWARE}  "timeout ${TIMEOUT} mysql ${AUTH} --database=slurm_acct_db --skip-column-names --execute 'show tables;' | grep ${CLUSTERNAME}_last_ran"

trap '' 0
exit ${EX_OK}

# vim: background=dark
