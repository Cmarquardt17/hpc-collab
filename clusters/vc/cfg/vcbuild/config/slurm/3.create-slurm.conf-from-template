#!/bin/bash

## $Header: $
## Source:
## @file vcsched/config/slurm/2.start-slurmctld-early

## @brief start slurmctld service early

VCLOAD=../../../provision/loader/shload.sh

if [ ! -f "${VCLOAD}" ] ; then
  echo "${0}: missing: ${VCLOAD}"
  exit 99
fi
source ${VCLOAD}

# if we're given an argument, append test output to it
declare -x OUT=${1:-""}

if [ -n "${OUT}" ] ; then
  touch ${OUT} || exit 1
  exec > >(tee -a "${OUT}") 2>&1
fi

declare -x SLURMCONF=${ETCSLURM}/slurm.conf
declare -x COMMON_SLURMCONF=${COMMON}/${SLURMCONF}
declare -x COMMON_SLURMCONF_TEMPLATE=${COMMON}/${SLURMCONF}.template
declare -x TSTAMP=$(date +%Y.%m.%d.%H.%M)
declare -x PROD=$(basename $(pwd))
declare -x IAM=$(basename $0)
declare -x TMPFILE=config.${PROD}.${IAM}.${TSTAMP}
declare -x SLURMCONF_TMP1=/tmp/${TMPFILE}.1

trap "rm -f ${SLURMCONF_TMP1}" 0

if [ ! -d ${CFG} ] ; then
  ErrExit ${EX_CONFIG} "Node configuration (CFG:${CFG})  directories not found?"
fi

NODES=""
for n in $(ls ${CFG})
do
  d=${CFG}/${n}
  if [ -d ${d} -a ! -L ${d} ] ; then
    NODES="${NODES} ${n}"
  fi
done

NODES=$(echo ${NODES})
MIN_MEM_MB=512
ALLOC_MEM_FRACTION=0.70
numeric="[0-9]+"

Rc ErrExit ${EX_OSFILE} "cp ${COMMON_SLURMCONF_TEMPLATE} ${SLURMCONF_TMP1}"

for n in ${NODES}
do
  n_mem=$(ls ${CFG}/${n}/attributes/memory)
  if [ -z "${n_mem}" ] ; then
    ErrExit ${EX_CONFIG} "Node:$n memory attribute empty"
  fi
  if ! [[ ${n_mem} =~ ${numeric} ]] ; then
    ErrExit ${EX_CONFIG} "Node:$n memory n_mem:${n_mem} is not numeric"
  fi
  if [ "${n_mem}" -lt "${MIN_MEM_MB}" ] ; then
    ErrExit ${EX_CONFIG} "Node:$n memory:${n_mem} < MIN_MEM_MB:${MIN_MEM_MB} $((${MIN_MEM_MB}))"
  fi

  egrep --quiet "NodeName=${n}.*allocatable" ${SLURMCONF_TMP1}
  rc=$?
  if [ ${rc} -eq ${GREP_FOUND} ] ; then
    # ( )/1 to output only integers
    node_mem=$(echo "(${ALLOC_MEM_FRACTION} * ${n_mem})/1" | bc)
  else
    egrep -q "${n}.*%NODE_MEM%" ${SLURMCONF_TMP1}
    node_mem=${n_mem}
  fi

  if ! [[ ${node_mem} =~ ${numeric} ]] ; then
    ErrExit ${EX_CONFIG} "Node:$n allocated memory node_mem:${node_mem} is not numeric"
  fi

  node_lineno=$(sed -n -e "/NodeName=${n}/=" < ${SLURMCONF_TMP1})
  if ! [[ ${node_lineno} =~ ${numeric} ]] ; then
    ErrExit ${EX_CONFIG} "Node:$n line no in ${SLURMCONF_TMP1} is not numeric (${node_lineno})"
  fi

  Rc ErrExit ${EX_OSFILE} "sed -i -e \"${node_lineno}s/%NODE_MEM%/${node_mem}/\" ${SLURMCONF_TMP1} ;"
done
echo "# generated by: ${0}, ${TSTAMP}, ${HOSTNAME}, ${SLURMCONF_TMP1}" >> ${SLURMCONF_TMP1}

if [ -f ${COMMON_SLURMCONF} ] ; then
  Warn ${EX_OSFILE} "  Warning: overwriting preexisting cluster's COMMON_SLURMCONF:${COMMON_SLURMCONF}\n"
fi
Rc ErrExit ${EX_OSFILE} "cp -uv ${SLURMCONF_TMP1} ${COMMON_SLURMCONF}"

Rc ErrExit ${EX_SOFTWARE} "timeout ${TIMEOUT} chmod 0444 ${COMMON_SLURMCONF}"
Rc ErrExit ${EX_SOFTWARE} "timeout ${TIMEOUT} chown root:root ${COMMON_SLURMCONF}"

trap '' 0
exit ${EX_OK}

