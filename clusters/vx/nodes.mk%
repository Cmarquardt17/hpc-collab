# nodes.mk

# ---
vxsched!: verifylocalenv $(NONEXISTENT_D)/vxsched $(PROVISIONED_D)/vxsched

vxsched--: vxsched_UNPROVISION

vxsched-: verifylocalenv $(POWEROFF_D)/vxsched

vxsched+: verifylocalenv $(RUNNING_D)/vxsched

vxsched: verifylocalenv $(PROVISIONED_D)/vxsched

$(RUNNING_D)/vxsched: $(XFR_PREREQ) ingest-state $(addprefix $(PROVISIONED_D)/, $(notdir $(wildcard $(CFG)/vxsched/requires/*)))
	$(HUSH)if [ -f $(PROVISIONED_D)/vxsched ] ; then				  \
	  vagrant up --no-provision vxsched || exit 41		 			; \
											  \
	elif [ -f $(POWEROFF_D)/vxsched ] ; then					  \
	  vagrant up --no-provision vxsched || exit 42					; \
											  \
	elif [ ! -f $(PROVISIONED_D)/vxsched -a ! -f $(NONEXISTENT_D)/vxsched ] ; then	  \
	    vagrant destroy -f vxsched || exit 43					; \
	fi

$(PROVISIONED_D)/vxsched: $(XFR_PREREQ) ingest-state $(addprefix $(PROVISIONED_D)/, $(notdir $(wildcard $(CFG)/vxsched/requires/*)))
	$(HUSH)for prereq in $^							; \
        do									  \
	  if [[ "$(PHONY)" =~ $${prereq} ]] ; then				  \
	    continue								; \
	  fi									; \
	  if [[ $${prereq} =~ $(notdir $(VC))* ]] ; then			  \
	    continue								; \
	  fi									; \
	  if [ ! -f "$${prereq}" ] ; then					  \
	    echo prerequisite: $${prereq} missing				; \
	    exit 44								; \
	  fi									; \
	done									; \
	if [ -f $(RUNNING_D)/vxsched -a ! -f $(PROVISIONED_D)/vxsched ] ; then   \
	  vagrant destroy -f vxsched || exit 45					; \
	fi								        ; \
	if [ ! -f $(PROVISIONED_D)/vxsched ] ; then		       	          \
	  vagrant up --provision vxsched || exit 46				; \
	  env VC=$(VC) $(MARK_PROVISIONED)					; \
	fi

$(POWEROFF_D)/vxsched:
	$(HUSH)if [ ! -f "$(NONEXISTENT_D)/vxsched" ] ; then	  \
		vagrant halt vxsched				; \
	fi

$(NONEXISTENT_D)/vxsched: $(POWEROFF_D)/vxsched
	$(HUSH)vagrant destroy -f vxsched

vxsched_UNPROVISION: $(NONEXISTENT_D)/vxsched ingest-state
	$(HUSH)$(UNPROVISION) vxsched

# ---
vx1!: verifylocalenv $(NONEXISTENT_D)/vx1 $(PROVISIONED_D)/vx1

vx1--: vx1_UNPROVISION

vx1-: verifylocalenv $(POWEROFF_D)/vx1

vx1+: verifylocalenv $(RUNNING_D)/vx1

vx1: verifylocalenv $(PROVISIONED_D)/vx1

$(RUNNING_D)/vx1: $(XFR_PREREQ) ingest-state $(addprefix $(PROVISIONED_D)/, $(notdir $(wildcard $(CFG)/vx1/requires/*)))
	$(HUSH)if [ -f $(PROVISIONED_D)/vx1 ] ; then		       \
	  vagrant up --no-provision vx1 || exit 51		     ; \
								       \
	elif [ -f $(POWEROFF_D)/vx1 ] ; then			       \
	  vagrant up --no-provision vx1 || exit 52		     ; \
								       \
	elif [ ! -f $(PROVISIONED_D)/vx1 -a ! -f $(NONEXISTENT_D)/vx1 ] ; then \
	    vagrant destroy -f vx1 || exit 53			     ; \
	fi

$(PROVISIONED_D)/vx1: $(XFR_PREREQ) ingest-state $(addprefix $(PROVISIONED_D)/, $(notdir $(wildcard $(CFG)/vx1/requires/*)))
	$(HUSH)for prereq in $^						; \
        do								  \
	  if [[ "$(PHONY)" =~ $${prereq} ]] ; then			  \
	    continue							; \
	  fi								; \
	  if [[ $${prereq} =~ $(notdir $(VC))* ]] ; then		  \
	    continue							; \
	  fi								; \
	  if [ ! -f "$${prereq}" ] ; then				  \
	    echo prerequisite: $${prereq} missing			; \
	    exit 54							; \
	  fi								; \
	done								; \
	if [ -f $(RUNNING_D)/vx1 -a ! -f $(PROVISIONED_D)/vx1 ] ; then    \
	  vagrant destroy -f vx1 || exit 55				; \
	fi								; \
	if [ ! -f $(PROVISIONED_D)/vx1 ] ; then		       	          \
	  vagrant up --provision vx1 || exit 56				; \
	  env VC=$(VC) $(MARK_PROVISIONED)				; \
	fi

$(POWEROFF_D)/vx1:
	$(HUSH)if [ ! -f "$(NONEXISTENT_D)/vx1" ] ; then  \
		vagrant halt vx1			; \
	fi

$(NONEXISTENT_D)/vx1: $(POWEROFF_D)/vx1
	$(HUSH)vagrant destroy -f vx1

vx1_UNPROVISION: $(NONEXISTENT_D)/vx1 ingest-state
	$(HUSH)$(UNPROVISION) vx1

# ---
vx2!: verifylocalenv $(NONEXISTENT_D)/vx2 $(PROVISIONED_D)/vx2

vx2--: vx2_UNPROVISION

vx2-: verifylocalenv $(POWEROFF_D)/vx2

vx2+: verifylocalenv $(RUNNING_D)/vx2

vx2: verifylocalenv $(PROVISIONED_D)/vx2

$(RUNNING_D)/vx2: $(XFR_PREREQ) ingest-state $(addprefix $(PROVISIONED_D)/, $(notdir $(wildcard $(CFG)/vx2/requires/*)))
	$(HUSH)if [ -f $(PROVISIONED_D)/vx2 ] ; then			       \
	  vagrant up --no-provision vx2 || exit 61			 ;     \
									       \
	elif [ -f $(POWEROFF_D)/vx2 ] ; then				       \
	  vagrant up --no-provision vx2 || exit 62			 ;     \
									       \
	elif [ ! -f $(PROVISIONED_D)/vx2 -a ! -f $(NONEXISTENT_D)/vx2 ] ; then \
	    vagrant destroy -f vx2 || exit 63				 ;     \
	fi

$(PROVISIONED_D)/vx2: $(XFR_PREREQ) ingest-state $(addprefix $(PROVISIONED_D)/, $(notdir $(wildcard $(CFG)/vx2/requires/*)))
	$(HUSH)for prereq in $^							; \
        do									  \
	  if [[ "$(PHONY)" =~ $${prereq} ]] ; then				  \
	    continue								; \
	  fi									; \
	  if [[ $${prereq} =~ $(notdir $(VC))* ]] ; then			  \
	    continue								; \
	  fi									; \
	  if [ ! -f "$${prereq}" ] ; then					  \
	    echo prerequisite: $${prereq} missing				; \
	    exit 64								; \
	  fi									; \
	done									; \
	if [ -f $(RUNNING_D)/vx2 -a ! -f $(PROVISIONED_D)/vx2 ] ; then		  \
	  vagrant destroy -f vx2 || exit 65					; \
	fi									; \
	if [ ! -f $(PROVISIONED_D)/vx2 ] ; then		       	        	  \
	  vagrant up --provision vx2 || exit 66					; \
	  env VC=$(VC) $(MARK_PROVISIONED)					; \
	fi

$(POWEROFF_D)/vx2:
	$(HUSH)if [ ! -f "$(NONEXISTENT_D)/vx2" ] ; then  \
		vagrant halt vx2			; \
	fi

$(NONEXISTENT_D)/vx2: $(POWEROFF_D)/vx2
	$(HUSH)vagrant destroy -f vx2

vx2_UNPROVISION: $(NONEXISTENT_D)/vx2 ingest-state
	$(HUSH)$(UNPROVISION) vx2

# ---
vxlogin!: verifylocalenv $(NONEXISTENT_D)/vxlogin $(PROVISIONED_D)/vxlogin

vxlogin--: verifylocalenv vxlogin_UNPROVISION

vxlogin-: verifylocalenv $(POWEROFF_D)/vxlogin

vxlogin+: verifylocalenv $(RUNNING_D)/vxlogin

vxlogin: verifylocalenv $(PROVISIONED_D)/vxlogin

$(RUNNING_D)/vxlogin: $(XFR_PREREQ) ingest-state $(addprefix $(PROVISIONED_D)/, $(notdir $(wildcard $(CFG)/vxlogin/requires/*)))
	$(HUSH)if [ -f $(PROVISIONED_D)/vxlogin ] ; then			       \
	  vagrant up --no-provision vxlogin					     ; \
	  rc=$$?								     ; \
	  if [ $${rc} -ne 0 ] ; then						       \
	    $(DISABLE_RM) rm -f $(PROVISIONED_D)/vxlogin			     ; \
	    exit 71								     ; \
	  fi									     ; \
	elif [ -f $(POWEROFF_D)/vxlogin ] ; then				       \
	  vagrant up --no-provision vxlogin					     ; \
	  rc=$$?								     ; \
	  if [ $${rc} -ne 0 ] ; then						       \
	    $(DISABLE_RM) rm -f $(PROVISIONED_D)/vxlogin			     ; \
	    exit 72								     ; \
	  fi									     ; \
										       \
	elif [ ! -f $(PROVISIONED_D)/vxlogin -a ! -f $(NONEXISTENT_D)/vxlogin ] ; then \
	  vagrant destroy -f vxlogin || exit 73					     ; \
	fi									     ; \
	ssh vxlogin uptime >/dev/null 2>&1					     ; \
	rc=$$?									     ; \
	if [ $${rc} -ne 0 ] ; then						       \
	  $(DISABLE_RM) rm -f $(PROVISIONED_D)/vxlogin				     ; \
	  exit 74								     ; \
	fi

$(PROVISIONED_D)/vxlogin: $(XFR_PREREQ) $(addprefix $(PROVISIONED_D)/, $(notdir $(wildcard $(CFG)/vxlogin/requires/*)))
	$(HUSH)for prereq in $^							; \
        do									  \
	  if [[ "$(PHONY)" =~ $${prereq} ]] ; then				  \
	    continue								; \
	  fi									; \
	  if [[ $${prereq} =~ $(notdir $(VC))* ]] ; then			  \
	    continue								; \
	  fi									; \
	  if [ ! -f "$${prereq}" ] ; then					  \
	    echo prerequisite: $${prereq} missing				; \
	    exit 75								; \
	  fi									; \
	done									; \
	if [ -f $(RUNNING_D)/vxlogin -a ! -f $(PROVISIONED_D)/vxlogin ] ; then	  \
	  vagrant destroy -f vxlogin || exit 76					; \
	fi								      	; \
	if [ ! -f $(PROVISIONED_D)/vxlogin ] ; then			       	  \
	  vagrant up --provision vxlogin					; \
	  rc=$$?								; \
	  if [ $${rc} -ne 0 ] ; then						  \
	    $(DISABLE_RM) rm -f $(PROVISIONED_D)/vxlogin			; \
	    exit 77								; \
	  else									  \
	    env VC=$(VC) $(MARK_PROVISIONED)					; \
	  fi									; \
	fi

$(POWEROFF_D)/vxlogin:
	$(HUSH)if [ ! -f "$(NONEXISTENT_D)/vxlogin" ] ; then	  \
		vagrant halt vxlogin				; \
	fi

$(NONEXISTENT_D)/vxlogin: $(POWEROFF_D)/vxlogin
	$(HUSH)vagrant destroy -f vxlogin

vxlogin_UNPROVISION: $(NONEXISTENT_D)/vxlogin ingest-state
	$(HUSH)$(UNPROVISION) vxlogin

# ---
