# vx.mk

VCC					= ../vc

VC_PREREQ_NODES				= vcfs vcbuild vcsvc vcdb
VC_COMMON_D	    			= $(VCC)/common
VC_STATE_D	  			= $(VC_COMMON_D)/._state
VC_PROVISIONED_D			= $(VC_STATE_D)/provisioned
VX_REQUIRES_VC_PROVISIONED_NODES	= $(addprefix $(PROVISIONED_D)/,$(VC_PREREQ_NODES))

ALTERNATE_VC_D				= ../vc~

$(SAVELOGS_TARGETS): $(wildcard $(PROVISIONED_D)/*)

# ### ### ###
### ### ### ###
# vx-specific cluster config
### ### ### ###

# @todo programmatical determine that vcdb is the data base host, perhaps DBDPORT config in firewall?
$(STATE_DIRS_ALL):
	$(HUSH)mkdir -p $@
	$(HUSH)export EXISTS=`ssh vcdb sacctmgr show cluster $(IAM) -n`	 ; \
 	if [ -n "$${EXISTS}" ] ; then					   \
 	  ssh vcdb sacctmgr -iQ delete cluster $(IAM)			 ; \
 	fi

$(VX_REQUIRES_VC_PROVISIONED_NODES):
	$(HUSH)export _PREREQ_CLUSTER=$(call substr,$(@F),1,2)						; \
	env VC=$(VC) $(INGEST_STATE)									; \
	env VC=$${_PREREQ_CLUSTER} $(INGEST_STATE)							; \
	if [ -z "$${_PREREQ_CLUSTER}" ] ; then								  \
		echo "PREREQ_CLUSTER empty, VC:$${VC} _PREREQ_CLUSTER:$${_PREREQ_CLUSTER} \$(@F):$(@F)"	; \
		exit 111										; \
	fi												; \
	if [ ! -f "$(VC_PROVISIONED_D)/$(@F)" ] ; then							  \
		env VC=$${_PREREQ_CLUSTER} VIRTUALCLUSTER=$${_PREREQ_CLUSTER}                             \
				$(MAKE) -e VC=$${_PREREQ_CLUSTER} -C ../$${_PREREQ_CLUSTER} $(@F)!	; \
		touch $(VC_PROVISIONED_D)/$(@F)								; \
	fi

### ### ### ###
